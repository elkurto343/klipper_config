# This is a config for the Creality v2.2 board taken out of
# an ender 5 plus and fitted in an ender 5 pro.

[pause_resume]

[virtual_sdcard]
path: ~/gcode_files

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp

[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^PE5
position_endstop: 220
position_max: 220
homing_speed: 50

[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^PJ1
position_endstop: 220
position_max: 220
homing_speed: 50

[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 4
endstop_pin: ^PD3
position_min: 0
position_max: 250
position_endstop: 0.0

[safe_z_home]
home_xy_position: 110,110
speed: 50
z_hop: 10
z_hop_speed: 5

[extruder]
max_extrude_only_distance: 100.0
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 32.342
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
control: pid
pid_kp: 24.831
pid_ki: 1.346
pid_kd: 114.532
min_temp: 0
max_temp: 260

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
control: pid
pid_kp: 66.429
pid_ki: 1.197
pid_kd: 921.707
min_temp: 0
max_temp: 135

# [controller_fan]
# # pin: PB15 // todo
# stepper: stepper_x, stepper_y, stepper_z

[heater_fan nozzle_fan]
pin: PH4
heater: extruder

[fan]
pin: PH6

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AB0M9YJU-if00-port0

[printer]
kinematics: cartesian
max_velocity: 195
max_accel: 500
max_z_velocity: 5
max_z_accel: 100

# [bed_screws]
# screw1: 30,30
# screw2: 200,30
# screw3: 30,195
# screw4: 200,195

# [board_pins]
# aliases:
#     # EXP1 header
#     EXP1_1=PC0, EXP1_3=PH0, EXP1_5=PA1, EXP1_7=PA5, EXP1_9=<GND>,
#     EXP1_2=PC2, EXP1_4=PH1, EXP1_6=PA3, EXP1_8=PA7, EXP1_10=<5V>,
#     # EXP 2 header
#     EXP2_1=PB3, EXP2_3=PC6, EXP2_5=PC4, EXP2_7=PL0, EXP2_9=<GND>,
#     EXP2_2=PB1, EXP2_4=PB0, EXP2_6=PB2, EXP2_8=<RST>, EXP2_10=PC0

[display_status]

# # https://github.com/Klipper3d/klipper/blob/master/config/sample-lcd.cfg#L13
# [display]
# lcd_type: st7920
# cs_pin: EXP1_4
# sclk_pin: EXP1_5
# sid_pin: EXP1_3
# encoder_pins: ^EXP2_3, ^EXP2_5
# click_pin: ^!EXP1_2
# #kill_pin: ^!EXP2_8

# # https://github.com/Klipper3d/klipper/blob/master/config/sample-lcd.cfg#L50
# [display]
# lcd_type: st7920
# cs_pin: EXP1_7
# sclk_pin: EXP1_6
# sid_pin: EXP1_8
# encoder_pins: ^EXP1_5, ^EXP1_3
# click_pin: ^!EXP1_2

# [output_pin beeper]
# pin: EXP1_1

[gcode_macro START_PRINT]
gcode:
  G28 # Home
  G92 E0 # Reset Extruder
  G1 Z2.0 F3000 # Move Z Axis up
  G1 X10.1 Y20 Z0.28 F5000.0 # Move to start position
  G1 X10.1 Y200.0 Z0.28 F1500.0 E15 # Draw the first line
  G1 X10.4 Y200.0 Z0.28 F5000.0 # Move to side a little
  G1 X10.4 Y20 Z0.28 F1500.0 E30 # Draw the second line
  G92 E0 # Reset Extruder
  G1 Z2.0 F3000 # Move Z Axis up

[gcode_macro END_PRINT]
gcode:
  G91 # Relative positioning
  G1 E-2 F2700 # Retract a bit
  G1 E-2 Z0.2 F2400 # Retract and raise Z
  G1 X5 Y5 F3000 # Wipe out
  G1 Z10 # Raise Z more

  G90 # Absolute positioning

  M106 S0 # Turn-off fan
  M104 S0 # Turn-off hotend
  M140 S0 # Turn-off bed

  G1 X210 Y210 # Present print

  M84 X Y E # Disable all steppers but Z

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
